// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: affiliation.sql

package db

import (
	"context"
	"database/sql"
)

const createAffiliation = `-- name: CreateAffiliation :execresult
INSERT INTO
    affiliations (name)
VALUES
    (?)
`

func (q *Queries) CreateAffiliation(ctx context.Context, name string) (sql.Result, error) {
	return q.db.ExecContext(ctx, createAffiliation, name)
}

const getAffiliationById = `-- name: GetAffiliationById :one
SELECT
    id,
    name
FROM
    affiliations
WHERE
    id = ?
`

type GetAffiliationByIdRow struct {
	ID   uint32 `json:"id"`
	Name string `json:"name"`
}

func (q *Queries) GetAffiliationById(ctx context.Context, id uint32) (GetAffiliationByIdRow, error) {
	row := q.db.QueryRowContext(ctx, getAffiliationById, id)
	var i GetAffiliationByIdRow
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}
